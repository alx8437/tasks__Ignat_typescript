{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","message","src","avatar","alt","content","name","time","messageData","Date","toLocaleTimeString","navigator","language","hour","minute","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","wrapper","item","affair","_id","priority","buttonRemove","onClick","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","key","buttonWrapper","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","id","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","inputDefault","errorInput","superInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","wrapperGreeting","totalUsersGreeting","GreetingContainer","users","addUserCallback","setName","setError","length","inputValue","alert","HW3","setUsers","newUser","v1","newUsers","SuperCheckbox","onChangeChecked","children","checkbox","onChangeToggle","checked","HW4","text","setText","showAlert","setChecked","column","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d0ccc76d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputDefault\":\"SuperInputText_inputDefault__RQit8\",\"errorInput\":\"SuperInputText_errorInput__cCgku\",\"superInput\":\"SuperInputText_superInput__1KPQJ\",\"error\":\"SuperInputText_error__dMbdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2RSel\",\"content\":\"Message_content__3P-3i\",\"name\":\"Message_name__1HIzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Affair_item__jhSz2\",\"buttonRemove\":\"Affair_buttonRemove__3CPGY\",\"wrapper\":\"Affair_wrapper__1A8b0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3J0DW\",\"red\":\"SuperButton_red__3lAnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperGreeting\":\"Greeting_wrapperGreeting__XZxFR\",\"errorGreeting\":\"Greeting_errorGreeting__15yav\",\"inputGreetingWrapper\":\"Greeting_inputGreetingWrapper__1ofHO\",\"totalUsersGreeting\":\"Greeting_totalUsersGreeting__17ilY\",\"buttonGreeting\":\"Greeting_buttonGreeting__25aPe\",\"errorMessageGreeting\":\"Greeting_errorMessageGreeting__3710m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Qju94\",\"spanClassName\":\"SuperCheckbox_spanClassName__2NIEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__uaanh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonPriority\":\"Affairs_buttonPriority__wKqtD\",\"buttonWrapper\":\"Affairs_buttonWrapper__OuY_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2cYez\",\"column\":\"HW4_column__2Wcro\"};","import React from \"react\";\r\nimport styles from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n\r\n\r\n    return (\r\n        <div className={styles.message}>\r\n            <img src={props.avatar} alt=\"\"/>\r\n            <div className={styles.content}>\r\n                <div className={styles.name}>{props.name}</div>\r\n                <div>{props.message}</div>\r\n                <div>{props.time}</div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst date = new Date().toLocaleTimeString(navigator.language, {hour: '2-digit', minute: '2-digit'})\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Aleksandr\",\r\n    message: \"Hello! How are you? Today is nice weather - go to park!\",\r\n    time: date,\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport styles from \"./Affair.module.css\"\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <ul>\r\n                <li className={styles.item}>\r\n                    id: {props.affair._id},\r\n                    detail: {props.affair.name},\r\n                    priority: {props.affair.priority}\r\n                </li>\r\n            </ul>\r\n\r\n            <SuperButton className={styles.buttonRemove} onClick={deleteCallback}>X</SuperButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React, {Dispatch, SetStateAction} from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport styles from \"./Affairs.module.css\"\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: Dispatch<SetStateAction<FilterType>>\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix\r\n    const setHigh = () => {props.setFilter(\"high\")};\r\n    const setMiddle = () => {props.setFilter(\"middle\")};\r\n    const setLow = () => {props.setFilter(\"low\")};\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <div  className={styles.buttonWrapper}>\r\n                <SuperButton onClick={setAll}>All</SuperButton>\r\n                <SuperButton onClick={setHigh}>High</SuperButton>\r\n                <SuperButton onClick={setMiddle}>Middle</SuperButton>\r\n                <SuperButton onClick={setLow}>Low</SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\";\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n};\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    switch (filter) {\r\n        case \"all\": return affairs\r\n        case \"high\": return affairs.filter(a => a.priority === \"high\")\r\n        case \"low\": return affairs.filter(a => a.priority === \"low\")\r\n        case \"middle\": return affairs.filter(a => a.priority === \"middle\")\r\n\r\n        default: return affairs\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (id: number) => setAffairs(deleteAffair(affairs, id)); // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.inputDefault} ${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error?: string\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n\r\n    // const inputClass = (error) ? `${s.inputGreetingWrapper}` : ''\r\n\r\n    return (<>\r\n            <div className={s.wrapperGreeting}>\r\n                <SuperInputText\r\n                    value={name}\r\n                    onChange={setNameCallback}\r\n                    error={error}\r\n                />\r\n                <SuperButton red={error !== \"\"} onClick={addUser}>add</SuperButton>\r\n                <span className={s.totalUsersGreeting}>{totalUsers}</span>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\");\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(\"\")\r\n        const inputValue = e.currentTarget.value\r\n        setName(inputValue)\r\n    };\r\n    const addUser = () => {\r\n       if (name) {\r\n           setError(\"\")\r\n           addUserCallback(name)\r\n           alert(`Hello ${name}!`)\r\n           setName(\"\")\r\n       } else {\r\n           setError(\"Error!\")\r\n       }\r\n    };\r\n\r\n    const totalUsers = users.length;\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n\r\n    const addUserCallback = (name: string) => {\r\n        const newUser = {_id: v1(), name}\r\n        const newUsers: Array<UserType> = [...users, newUser]\r\n        setUsers(newUsers);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            <GreetingContainer\r\n                users={users}\r\n                addUserCallback={addUserCallback}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n    }\r\n\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n    const onChangeToggle = (onChange) ? onChange : onChangeCallback\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeToggle}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red={text === \"\"} // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    post {/*// название кнопки попадёт в children* (content between open and close tag)*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    first checkbox {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}>\r\n                    second checkbox\r\n                </SuperCheckbox>\r\n\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}